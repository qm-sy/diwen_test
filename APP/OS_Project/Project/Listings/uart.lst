C51 COMPILER V9.60.7.0   UART                                                              08/24/2025 23:25:32 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\Output\uart.obj
COMPILER INVOKED BY: D:\APP\KEIL\MDK\C51\BIN\C51.EXE ..\Core\Src\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP\Inc
                    -;..\Core\Inc;..\Driver;..\Emembed\Inc;..\SYSTEM) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(..\Output\
                    -uart.obj)

line level    source

   1          #include "uart.h"
   2          
   3          uint8_t          xdata         R_u2[UART2_RX_LENTH];    //串口2接受数组
   4          uint8_t          xdata         R_OD2 = 0;       //串口2收到数据
   5          uint16_t         xdata         R_CN2 = 0;     //串口2长度计数器
   6          uint8_t          xdata         T_O2  = 0;     //串口2超时计数器
   7          bit                        Busy2 = 0;       //串口2发送标志
   8          
   9          bit                 Response_flog    = 0;  //应答用
  10          bit                 Auto_data_upload = 0;//数据自动上传用
  11          bit                 Crc_check_flog   = 0;//Crc校验标记
  12          bit                 download_flag    = 0;
  13          
  14          void Uart2_Init( uint32_t baud )
  15          {
  16   1          MUX_SEL |= 0X40;        //[6] = 1 时，IO口 P0.4、P0.5作为uart2接口
  17   1      
  18   1          P0MDOUT &= 0XCF;        //P0口输出配置
  19   1          P0MDOUT |= 0X10;        //P0.4输出开启，P0.5输出关闭
  20   1      
  21   1          SCON0 = 0x50;           //uart2控制接口，SM1 = 1, REN0 = 1;
  22   1          ADCON = 0x80;           //波特率发生器选择  0x00=T1 定时器，0x80=使用 SREL0H:L。
  23   1          PCON &= 0x7f;           //[7] = 1 时，波特率倍频 为0则不倍频
  24   1      
  25   1          baud = 1024 - FOSC / 64 / baud;
  26   1      
  27   1          SREL0H = (uint8_t)(baud>>8);
  28   1          SREL0L = (uint8_t)baud;
  29   1      
  30   1          ES0 = 1;                //uart2 中断开启
  31   1          EA  = 1;                //总中断开关
  32   1      }
  33          
  34          void Uart4_Init( uint32_t baud )
  35          {
  36   1        SCON2T= 0x80;       //发送使能和模式设置
  37   1        SCON2R= 0x80;       //接受使能和模式设置 
  38   1        ES2R = 1;           //中断接受使能
  39   1          ES2T = 1;           //中断发送使能
  40   1      
  41   1          baud = 1024 - FOSC / 64 / baud;
  42   1      
  43   1          BODE2_DIV_H = (uint8_t)(baud>>8);
  44   1          BODE2_DIV_L = (uint8_t)baud;
  45   1      
  46   1          P0MDOUT|=(1<<0); //p0^0 强推
  47   1          // TR4=0;
  48   1      }
  49          
  50          void uart_frame_deal( void )
  51          {
  52   1        //串口2数据收发
  53   1        if(( R_OD2 == 1 ) && ( T_O2 == 0 ))
C51 COMPILER V9.60.7.0   UART                                                              08/24/2025 23:25:32 PAGE 2   

  54   1        {
  55   2          R_OD2=0;
  56   2          deal_uart_data(R_u2,(uint16_t*)(&R_CN2),2,RESPONSE_UART2,CRC_CHECK_UART2);
  57   2          R_CN2=0;
  58   2        } 
  59   1      }
  60          
  61          void deal_uart_data(uint8_t* Arr_rece,uint16_t* Data_len,uint8_t Uart_num,bit Response,bit Crc_ck)
  62          {
  63   1        uint16_t N = 0; 
  64   1        bit Flog = 1;
  65   1      
  66   1        while(Flog)
  67   1        {   
  68   2          if(( Arr_rece[N] == DTHD1 ) && ( Arr_rece[N+1] == DTHD2 ))   //5A A5 07 82 1000 0001 0002
  69   2          {      
  70   3            if( Arr_rece[N+3] == 0x82 )     
  71   3            {    
  72   4              Response_flog = Response;       //应答标记
  73   4              Crc_check_flog = Crc_ck;        //Crc标记
  74   4              deal_82_cmd(Uart_num,Arr_rece + N);   //处理82指令
  75   4              N = N + Arr_rece[N + 2] + 2;
  76   4            }                         // 0  1  2  3  4  5  6  7 8  9 10
  77   3            else if( Arr_rece[N + 3] == 0x83 )        //5A A5 08 83 1000 02 0001 0002
  78   3            {     
  79   4              uint8_t Val[FRAME_LEN] = {0}; 
  80   4              Crc_check_flog = Crc_ck;        //Crc标记
  81   4              deal_83_cmd(Uart_num, Val, Arr_rece + N);//处理83指令
  82   4              N = N + Arr_rece[N + 2] + 2;
  83   4            }else
  84   3            {
  85   4              N++;
  86   4            }   
  87   3          }
  88   2          if( N < (*Data_len - 4)) 
  89   2          {
  90   3            N++;
  91   3          }
  92   2          else 
  93   2          {
  94   3            Flog=0; 
  95   3          }           
  96   2        }
  97   1      }
  98          
  99          void  deal_82_cmd(uint8_t Uart, uint8_t* arr)
 100          {    
 101   1        uint8_t i=0;
 102   1        if( Crc_check_flog == 0 ) //不含CRC检验
 103   1        {    
 104   2          if(arr[4] == 0x00 && arr[5] == 0x06)
 105   2          {
 106   3            Write_Dgus(0x0006,0x5aa5);
 107   3            Write_Dgus(0x0007,0X8000);
 108   3          }else
 109   2          {
 110   3            Write_Dgusii_Vp_byChar((arr[4] << 8) + arr[5],arr + 6,arr[2] - 3);  
 111   3          }
 112   2          
 113   2          if( Response_flog == 1 )   
 114   2          {
 115   3            uint8_t Temp_arr[]={DTHD1,DTHD2,0X03,0X82,0X4F,0X4B};   
C51 COMPILER V9.60.7.0   UART                                                              08/24/2025 23:25:32 PAGE 3   

 116   3                        
 117   3            for(i = 0; i < 6; i++)
 118   3            {
 119   4              uart_send_byte(Uart,Temp_arr[i]); //5A A5 03 82 4F 4B
 120   4            }                    
 121   3          }
 122   2        }
 123   1      }
 124          
 125          /****************************************************************************/
 126          void  deal_83_cmd(uint8_t Uart,uint8_t* arr,uint8_t* arr1)
 127          {
 128   1          uint8_t i=0;
 129   1          if(Crc_check_flog==0) //不含CRC检验
 130   1          {   
 131   2              for( i = 0; i < 7; i++ )
 132   2              {
 133   3                  arr[i]=arr1[i];
 134   3              }
 135   2      
 136   2              sys_read_vp((arr[4] << 8) + arr[5],(uint8_t*) & arr[7],arr[6]);
 137   2              arr[2]=(2 * arr[6]) + 4;
 138   2      
 139   2              for(i = 0; i < (arr[2] + 3); i++)
 140   2              {
 141   3                  uart_send_byte(Uart,arr[i]);
 142   3              }                              
 143   2          }
 144   1      }
 145          
 146          void uart_send_byte(uint8_t Uart_number,uint8_t Dat)
 147          {
 148   1          download_flag = 1;
 149   1          if( Uart_number == 2 )
 150   1          {
 151   2              while (Busy2);               
 152   2              Busy2 = 1;
 153   2              SBUF0 = Dat;         
 154   2          }
 155   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1104    ----
   CONSTANT SIZE    =    261    ----
   XDATA SIZE       =   2052     291
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
