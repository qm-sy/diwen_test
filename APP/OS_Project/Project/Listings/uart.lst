C51 COMPILER V9.60.7.0   UART                                                              08/25/2025 22:37:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\Output\uart.obj
COMPILER INVOKED BY: D:\APP\KEIL\MDK\C51\BIN\C51.EXE ..\Core\Src\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP\Inc
                    -;..\Core\Inc;..\Driver;..\Emembed\Inc;..\SYSTEM) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(..\Output\
                    -uart.obj)

line level    source

   1          #include "uart.h"
   2          
   3          uint8_t  xdata R_u2[UART2_RX_LENTH];  //串口2接受数组
   4          uint8_t  xdata R_OD2;             //串口2收到数据
   5          uint16_t xdata R_CN2;           //串口2长度计数器
   6          uint8_t  xdata T_O2;            //串口2超时计数器
   7          bit        Busy2;             //串口2发送标志
   8          
   9          bit        Response_flog;       //应答用
  10          bit        Auto_data_upload;    //数据自动上传用
  11          bit        Crc_check_flog;      //Crc校验标记
  12          bit        download_flag;     //串口2通讯与下载区分标志位
  13          
  14          void burn_params_init( void )
  15          {
  16   1        R_OD2 = 0;
  17   1        R_CN2 = 0;
  18   1        T_O2  = 0;
  19   1        Busy2 = 0;
  20   1        Response_flog    = 0;
  21   1        Auto_data_upload = 0;
  22   1        Crc_check_flog   = 0;
  23   1        download_flag    = 1;
  24   1      }
  25          
  26          void Uart2_Init( uint32_t baud )
  27          {
  28   1          MUX_SEL |= 0X40;        //[6] = 1 时，IO口 P0.4、P0.5作为uart2接口
  29   1      
  30   1          P0MDOUT &= 0XCF;        //P0口输出配置
  31   1          P0MDOUT |= 0X10;        //P0.4输出开启，P0.5输出关闭
  32   1      
  33   1          SCON0 = 0x50;           //uart2控制接口，SM1 = 1, REN0 = 1;
  34   1          ADCON = 0x80;           //波特率发生器选择  0x00=T1 定时器，0x80=使用 SREL0H:L。
  35   1          PCON &= 0x7f;           //[7] = 1 时，波特率倍频 为0则不倍频
  36   1      
  37   1          baud = 1024 - FOSC / 64 / baud;
  38   1      
  39   1          SREL0H = (uint8_t)(baud>>8);
  40   1          SREL0L = (uint8_t)baud;
  41   1      
  42   1          ES0 = 1;                //uart2 中断开启
  43   1      }
  44          
  45          void Uart4_Init( uint32_t baud )
  46          {
  47   1        SCON2T= 0x80;       //发送使能和模式设置
  48   1        SCON2R= 0x80;       //接受使能和模式设置 
  49   1        ES2R = 1;           //中断接受使能
  50   1          ES2T = 1;           //中断发送使能
  51   1      
  52   1          baud = FOSC/8/baud;
  53   1      
C51 COMPILER V9.60.7.0   UART                                                              08/25/2025 22:37:01 PAGE 2   

  54   1          BODE2_DIV_H = (uint8_t)(baud>>8);
  55   1          BODE2_DIV_L = (uint8_t)baud;
  56   1      
  57   1          P0MDOUT|=(1<<0); //p0^0 强推
  58   1          // TR4=0;
  59   1      }
  60          
  61          void Uart5_Init( uint32_t baud )
  62          {
  63   1        SCON3T= 0x80;       //发送使能和模式设置
  64   1        SCON3R= 0x80;       //接受使能和模式设置 
  65   1        ES3R = 1;           //中断接受使能
  66   1          ES3T = 1;           //中断发送使能
  67   1      
  68   1          baud = FOSC/8/baud;
  69   1      
  70   1        BODE3_DIV_H = (uint8_t)(baud>>8);
  71   1          BODE3_DIV_L = (uint8_t)baud;
  72   1      
  73   1          P0MDOUT|=(1<<1); //p0^1 强推
  74   1          // TR5=0;
  75   1      }
  76          
  77          void uart_frame_deal( void )
  78          {
  79   1        //串口2数据收发
  80   1        if(( R_OD2 == 1 ) && ( T_O2 == 0 ))
  81   1        {
  82   2          R_OD2=0;
  83   2          deal_uart_data(R_u2,(uint16_t*)(&R_CN2),2,RESPONSE_UART2,CRC_CHECK_UART2);
  84   2          R_CN2=0;
  85   2        } 
  86   1      }
  87          
  88          void deal_uart_data(uint8_t* Arr_rece,uint16_t* Data_len,uint8_t Uart_num,bit Response,bit Crc_ck)
  89          {
  90   1        uint16_t N = 0; 
  91   1        bit Flog = 1;
  92   1      
  93   1        while(Flog)
  94   1        {   
  95   2          if(( Arr_rece[N] == DTHD1 ) && ( Arr_rece[N+1] == DTHD2 ))   //5A A5 07 82 1000 0001 0002
  96   2          {      
  97   3            if( Arr_rece[N+3] == 0x82 )     
  98   3            {    
  99   4              Response_flog = Response;       //应答标记
 100   4              Crc_check_flog = Crc_ck;        //Crc标记
 101   4              deal_82_cmd(Uart_num,Arr_rece + N);   //处理82指令
 102   4              N = N + Arr_rece[N + 2] + 2;
 103   4            }                         // 0  1  2  3  4  5  6  7 8  9 10
 104   3            else if( Arr_rece[N + 3] == 0x83 )        //5A A5 08 83 1000 02 0001 0002
 105   3            {     
 106   4              uint8_t Val[FRAME_LEN] = {0}; 
 107   4              Crc_check_flog = Crc_ck;        //Crc标记
 108   4              deal_83_cmd(Uart_num, Val, Arr_rece + N);//处理83指令
 109   4              N = N + Arr_rece[N + 2] + 2;
 110   4            }else
 111   3            {
 112   4              N++;
 113   4            }   
 114   3          }
 115   2          if( N < (*Data_len - 4)) 
C51 COMPILER V9.60.7.0   UART                                                              08/25/2025 22:37:01 PAGE 3   

 116   2          {
 117   3            N++;
 118   3          }
 119   2          else 
 120   2          {
 121   3            Flog=0; 
 122   3          }           
 123   2        }
 124   1      }
 125          
 126          void  deal_82_cmd(uint8_t Uart, uint8_t* arr)
 127          {    
 128   1        uint8_t i=0;
 129   1        if( Crc_check_flog == 0 ) //不含CRC检验
 130   1        {    
 131   2          if(arr[4] == 0x00 && arr[5] == 0x06)
 132   2          {
 133   3            Write_Dgus(0x0006,0x5aa5);
 134   3            Write_Dgus(0x0007,0X8000);
 135   3          }else
 136   2          {
 137   3            Write_Dgusii_Vp_byChar((arr[4] << 8) + arr[5],arr + 6,arr[2] - 3);  
 138   3          }
 139   2          
 140   2          if( Response_flog == 1 )   
 141   2          {
 142   3            uint8_t Temp_arr[]={DTHD1,DTHD2,0X03,0X82,0X4F,0X4B};   
 143   3                        
 144   3            for(i = 0; i < 6; i++)
 145   3            {
 146   4              uart_send_byte(Uart,Temp_arr[i]); //5A A5 03 82 4F 4B
 147   4            }                    
 148   3          }
 149   2        }
 150   1      }
 151          
 152          /****************************************************************************/
 153          void  deal_83_cmd(uint8_t Uart,uint8_t* arr,uint8_t* arr1)
 154          {
 155   1          uint8_t i=0;
 156   1          if(Crc_check_flog==0) //不含CRC检验
 157   1          {   
 158   2              for( i = 0; i < 7; i++ )
 159   2              {
 160   3                  arr[i]=arr1[i];
 161   3              }
 162   2      
 163   2              sys_read_vp((arr[4] << 8) + arr[5],(uint8_t*) & arr[7],arr[6]);
 164   2              arr[2]=(2 * arr[6]) + 4;
 165   2      
 166   2              for(i = 0; i < (arr[2] + 3); i++)
 167   2              {
 168   3                  uart_send_byte(Uart,arr[i]);
 169   3              }                              
 170   2          }
 171   1      }
 172          
 173          void uart_send_byte(uint8_t Uart_number,uint8_t Dat)
 174          {
 175   1          download_flag = 1;
 176   1          if( Uart_number == 2 )
 177   1          {
C51 COMPILER V9.60.7.0   UART                                                              08/25/2025 22:37:01 PAGE 4   

 178   2              while (Busy2);               
 179   2              Busy2 = 1;
 180   2              SBUF0 = Dat;         
 181   2          }
 182   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1195    ----
   CONSTANT SIZE    =    261    ----
   XDATA SIZE       =   2052     295
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
